<?php

/**
 * This is the model base class for the table "organization".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Organization".
 *
 * Columns in table "organization" available as properties of the model,
 * followed by relations of table "organization" available as properties of the model.
 *
 * @property integer $id
 * @property string $name
 * @property integer $location_id
 *
 * @property Email[] $emails
 * @property Location $location
 * @property Person[] $people
 * @property Phone[] $phones
 */
abstract class BaseOrganization extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'organization';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Organization|Organizations', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('name, location_id', 'required'),
			array('location_id', 'numerical', 'integerOnly'=>true),
			array('name', 'length', 'max'=>45),
			array('id, name, location_id', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'emails' => array(self::HAS_MANY, 'Email', 'organization_id'),
			'location' => array(self::BELONGS_TO, 'Location', 'location_id'),
			'people' => array(self::MANY_MANY, 'Person', 'person_organization(organization_id, person_id)'),
			'phones' => array(self::HAS_MANY, 'Phone', 'organization_id'),
		);
	}

	public function pivotModels() {
		return array(
			'people' => 'PersonOrganization',
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'name' => Yii::t('app', 'Name'),
			'location_id' => null,
			'emails' => null,
			'location' => null,
			'people' => null,
			'phones' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('location_id', $this->location_id);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}