<?php

/**
 * This is the model base class for the table "event".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Event".
 *
 * Columns in table "event" available as properties of the model,
 * followed by relations of table "event" available as properties of the model.
 *
 * @property integer $id
 * @property string $name
 * @property integer $location_id
 * @property integer $event_type_id
 *
 * @property Date[] $dates
 * @property EventType $eventType
 * @property Location $location
 * @property Attendant[] $attendants
 * @property Organizer[] $organizers
 * @property Partner[] $partners
 * @property Sponsor[] $sponsors
 */
abstract class BaseEvent extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'event';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Event|Events', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('name', 'required'),
			array('location_id, event_type_id', 'numerical', 'integerOnly'=>true),
			array('name', 'length', 'max'=>45),
			array('location_id, event_type_id', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, name, location_id, event_type_id', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'dates' => array(self::HAS_MANY, 'Date', 'event_id'),
			'eventType' => array(self::BELONGS_TO, 'EventType', 'event_type_id'),
			'location' => array(self::BELONGS_TO, 'Location', 'location_id'),
			'attendants' => array(self::MANY_MANY, 'Attendant', 'event_attendant(event_id, attendant_id)'),
			'organizers' => array(self::MANY_MANY, 'Organizer', 'event_organizer(event_id, organizer_id)'),
			'partners' => array(self::MANY_MANY, 'Partner', 'event_partner(event_id, partner_id)'),
			'sponsors' => array(self::MANY_MANY, 'Sponsor', 'event_sponsor(event_id, sponsor_id)'),
		);
	}

	public function pivotModels() {
		return array(
			'attendants' => 'EventAttendant',
			'organizers' => 'EventOrganizer',
			'partners' => 'EventPartner',
			'sponsors' => 'EventSponsor',
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'name' => Yii::t('app', 'Name'),
			'location_id' => null,
			'event_type_id' => null,
			'dates' => null,
			'eventType' => null,
			'location' => null,
			'attendants' => null,
			'organizers' => null,
			'partners' => null,
			'sponsors' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('location_id', $this->location_id);
		$criteria->compare('event_type_id', $this->event_type_id);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}