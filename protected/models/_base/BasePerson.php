<?php

/**
 * This is the model base class for the table "person".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Person".
 *
 * Columns in table "person" available as properties of the model,
 * followed by relations of table "person" available as properties of the model.
 *
 * @property integer $id
 * @property string $name
 * @property string $middlename
 * @property string $lastname
 * @property string $dob
 *
 * @property Attendant[] $attendants
 * @property Email[] $emails
 * @property Organization[] $organizations
 * @property Phone[] $phones
 * @property User[] $users
 */
abstract class BasePerson extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'person';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Person|people', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('name, middlename, lastname', 'length', 'max'=>45),
			array('dob', 'safe'),
			array('name, middlename, lastname, dob', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, name, middlename, lastname, dob', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'attendants' => array(self::HAS_MANY, 'Attendant', 'person_id'),
			'emails' => array(self::HAS_MANY, 'Email', 'person_id'),
			'organizations' => array(self::MANY_MANY, 'Organization', 'person_organization(person_id, organization_id)'),
			'phones' => array(self::HAS_MANY, 'Phone', 'person_id'),
			'users' => array(self::HAS_MANY, 'User', 'person_id'),
		);
	}

	public function pivotModels() {
		return array(
			'organizations' => 'PersonOrganization',
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'name' => Yii::t('app', 'Name'),
			'middlename' => Yii::t('app', 'Middlename'),
			'lastname' => Yii::t('app', 'Lastname'),
			'dob' => Yii::t('app', 'Dob'),
			'attendants' => null,
			'emails' => null,
			'organizations' => null,
			'phones' => null,
			'users' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('middlename', $this->middlename, true);
		$criteria->compare('lastname', $this->lastname, true);
		$criteria->compare('dob', $this->dob, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}